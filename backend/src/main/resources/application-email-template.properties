# ECold Email Configuration Template
# Copy this to your application.properties file and update with your credentials

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# Enable/Disable email functionality
app.email.enabled=true

# =============================================================================
# GMAIL SMTP CONFIGURATION (Most Common)
# =============================================================================
# 1. Enable 2FA on your Gmail account
# 2. Generate App Password: https://myaccount.google.com/apppasswords
# 3. Use the app password below (not your regular Gmail password)

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=YOUR_EMAIL@gmail.com
spring.mail.password=YOUR_16_CHAR_APP_PASSWORD
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000

# =============================================================================
# OUTLOOK/OFFICE 365 CONFIGURATION (Alternative)
# =============================================================================
# Uncomment below for Outlook and comment Gmail section above
# spring.mail.host=smtp-mail.outlook.com
# spring.mail.port=587
# spring.mail.username=YOUR_EMAIL@outlook.com
# spring.mail.password=YOUR_PASSWORD
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true

# =============================================================================
# EMAIL DISPLAY SETTINGS
# =============================================================================
app.email.from-name=ECold Application

# =============================================================================
# OPTIONAL: ADVANCED SETTINGS
# =============================================================================
# Rate limiting (emails per minute)
app.email.rate-limit.emails-per-minute=30

# Connection pooling
spring.mail.properties.mail.smtp.connectionpoolsize=10
spring.mail.properties.mail.smtp.connectionpooltimeout=300000

# Debug logging (set to INFO in production)
logging.level.com.ecold.service.EmailService=DEBUG
logging.level.org.springframework.mail=INFO

# =============================================================================
# SECURITY: USE ENVIRONMENT VARIABLES IN PRODUCTION
# =============================================================================
# Instead of hardcoding credentials, use environment variables:
# spring.mail.username=${SPRING_MAIL_USERNAME}
# spring.mail.password=${SPRING_MAIL_PASSWORD}
# 
# Then set environment variables:
# export SPRING_MAIL_USERNAME=your-email@gmail.com
# export SPRING_MAIL_PASSWORD=your-app-password

# =============================================================================
# QUICK TEST AFTER SETUP
# =============================================================================
# 1. Start your application
# 2. Test email config: GET http://localhost:8080/api/emails/config/status
# 3. Send test email: POST http://localhost:8080/api/emails/test?toEmail=test@example.com
# 4. Use the email compose dialog in the application
