spring:
  application:
    name: ecold-backend

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope:
              - openid
              - profile
              - email
              - https://www.googleapis.com/auth/gmail.readonly
              - https://www.googleapis.com/auth/gmail.send
            redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:4200/auth/google/callback}
          microsoft:
            client-id: ${MICROSOFT_CLIENT_ID:}
            client-secret: ${MICROSOFT_CLIENT_SECRET:}
            scope:
              - openid
              - profile
              - email
              - https://graph.microsoft.com/mail.read
              - https://graph.microsoft.com/mail.send
            redirect-uri: ${MICROSOFT_REDIRECT_URI:http://localhost:4200/auth/microsoft/callback}
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: email
          microsoft:
            authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
            user-info-uri: https://graph.microsoft.com/v1.0/me
            user-name-attribute: id

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    root: WARN
    com.ecold: ${LOG_LEVEL:INFO}
    org.springframework.web: WARN
    org.springframework.security: WARN

# Firebase/Firestore Configuration
google:
  cloud:
    project-id: ${GOOGLE_CLOUD_PROJECT_ID:ecold-app-d3990}
    firestore:
      credentials-path: ${FIRESTORE_CREDENTIALS_PATH:classpath:firestore-key.json}

# Firestore Retry Configuration
firestore:
  retry:
    max-attempts: ${FIRESTORE_RETRY_MAX_ATTEMPTS:5}        # Maximum retry attempts
    initial-delay-ms: ${FIRESTORE_RETRY_INITIAL_DELAY:100}  # Initial delay before first retry
    max-delay-ms: ${FIRESTORE_RETRY_MAX_DELAY:60000}        # Maximum delay between retries
    timeout-ms: ${FIRESTORE_RETRY_TIMEOUT:30000}            # Timeout for each attempt

app:
  jwt:
    secret: ${JWT_SECRET:ecold-super-secret-key-change-in-production}
    expiration: ${JWT_EXPIRATION:86400000}
  email:
    enabled: ${EMAIL_ENABLED:true}
    from-name: ${EMAIL_FROM_NAME:ECold Application}
    batch-size: ${EMAIL_BATCH_SIZE:50}
    rate-limit: ${EMAIL_RATE_LIMIT:100}
    retry-attempts: ${EMAIL_RETRY_ATTEMPTS:3}
  file:
    upload-dir: ${FILE_UPLOAD_DIR:./uploads}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:4200,http://localhost:3000}

gmail:
  api:
    enabled: ${GMAIL_API_ENABLED:true}
    client-id: ${GOOGLE_CLIENT_ID:}
    client-secret: ${GOOGLE_CLIENT_SECRET:}
    redirect-uri: ${GMAIL_REDIRECT_URI:http://localhost:8080/api/auth/google/callback}
    scopes: ${GMAIL_SCOPES:https://www.googleapis.com/auth/gmail.send,https://www.googleapis.com/auth/gmail.modify}

templates:
  follow-up:
    auto-assign: ${TEMPLATES_FOLLOWUP_AUTO_ASSIGN:true}
    delay-days: ${TEMPLATES_FOLLOWUP_DELAY_DAYS:7}

scheduling:
  email:
    enabled: ${SCHEDULING_EMAIL_ENABLED:true}
    thread-pool-size: ${SCHEDULING_THREAD_POOL_SIZE:5}


